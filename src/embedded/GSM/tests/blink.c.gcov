        -:    0:Source:../blink.c
        -:    0:Graph:blink.gcno
        -:    0:Data:blink.gcda
        -:    0:Runs:4
        -:    0:Programs:1
        -:    1:/*!
        -:    2:This program is free software: you can redistribute it and/or modify
        -:    3:it under the terms of the GNU General Public License as
        -:    4:published by the Free Software Foundation, either version 3 of the
        -:    5:License, or (at your option) any later version.
        -:    6:
        -:    7:This program is distodributed in the hope that it will be useful,
        -:    8:but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:    9:MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
        -:   10:GNU General Public License for more details.
        -:   11:
        -:   12:You should have received a copy of the GNU General Public
        -:   13:License along with this program. If not, see
        -:   14:<http://www.gnu.org/licenses/gpl-3.0.html>.
        -:   15:*/
        -:   16:
        -:   17:
        -:   18:/*!
        -:   19: @file blink.c
        -:   20: @uthors Bishare Stepan
        -:   21: @date 20120502
        -:   22:*/
        -:   23: 
        -:   24:#include <Arduino.h>
        -:   25:#include "blink.h"
        -:   26:
        -:   27:/*!
        -:   28: @brief blinker function 
        -:   29: @this function is used during the connection with a GSM
        -:   30: @instead of ringing is blinking
        -:   31: @it takes a pin as parameter or argument
        -:   32: @return 0 on success
        -:   33:*/
        -:   34:
        -:   35:uint8_t
        -:   36:
        2:   37:blinker(uint8_t pin){
        -:   38:
        -:   39:  uint8_t i;
        -:   40:  
        -:   41: 
        -:   42:  /* Start by blinking fast. 
        -:   43:     Blink slower and slower and then return*/
        -:   44:      
       26:   45:  for (i=0;i<=10;){
       22:   46:      digitalWrite(pin, HIGH);
       22:   47:      delay(10);
       22:   48:      digitalWrite(pin, LOW);
       22:   49:      delay(10);
        -:   50:
       22:   51:      i++;
        -:   52:  }
        -:   53:  
        2:   54:      digitalWrite(pin, LOW);
        2:   55:      delay(80);
        -:   56:      
        2:   57:    return 0;
        -:   58:}
        -:   59:
        -:   60:/*!
        -:   61: @brief isOn function 
        -:   62: @this function is used when a connection with a GSM is already established
        -:   63: @ the LED is on and lighting
        -:   64: @it takes a pin as parameter or argument
        -:   65: @return 0 on success
        -:   66:*/
        -:   67:
        -:   68:uint8_t 
        -:   69:
        2:   70:isOn(uint8_t pin){
        -:   71:    
        2:   72:        digitalWrite(pin, HIGH);
        2:   73:        delay(200);
        -:   74:    
        2:   75:    return 0;
        -:   76:    
        -:   77:}
        -:   78:
        -:   79:/*!
        -:   80: @brief isOff function 
        -:   81: @this function is used when there is no connection with a GSM
        -:   82: @the LED is off and not lighting
        -:   83: @it takes a pin as parameter or argument
        -:   84: @return 0 on success
        -:   85:*/
        -:   86:
        -:   87:uint8_t 
        -:   88:
        2:   89:isOff(uint8_t pin){
        -:   90:       
        2:   91:        digitalWrite(pin, LOW);
        2:   92:        delay(200);
        -:   93:                
        2:   94:     return 0;
        -:   95:
        -:   96:}
        -:   97:
        -:   98:
        -:   99:
        -:  100:
