        -:    0:Source:test_case_6_GPS.c
        -:    0:Graph:test_suite.gcno
        -:    0:Data:test_suite.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    1:
        -:    2:/**
        -:    3: * \file 		test_case_6_GPS.c
        -:    4: * \date 		23-04-2012
        -:    5: * \version 	0.1 
        -:    6: * \author 		Fangzhou Cao          
        -:    7: * \attention 	Sections added/modified are as follow:
        -:    8: * 		 none
        -:    9: */
        -:   10:
        -:   11:
        -:   12:#include <check.h>
        -:   13:#include <stdlib.h>
        -:   14:#include <stdio.h>
        -:   15:#include "../gps.h"
        -:   16:
        -:   17:#define LINEMA 300
        -:   18:
        -:   19:/**
        -:   20: *ID:6
        -:   21: *Purpose: to test get_time(char*) and get_position(char*).
        -:   22: *Preparation: Get fake GPS data from GPS simulator.
        -:   23: *Action: pass the fake GPS data to those two functions and check the return values.
        -:   24: *Expected outcome: time != NULL, position != NULL.
        -:   25:  
        -:   26:**/
        -:   27:
        -:   28:
        -:   29:
        -:   30:
        1:   31:START_TEST(test_case_6) {
        -:   32:
        -:   33:char* linema;
        -:   34:char* time;
        -:   35:struct position* posi;
        -:   36: 
        1:   37:linema = read_rmc_data(); 
        -:   38:
        1:   39:time = get_time(linema);
        1:   40:printf("TIME: %s\n", time);
        -:   41:
        1:   42:posi = get_position(linema);
        1:   43:printf("POSITION: %f, %f, %c, %c\n", posi->longitude, posi->latitude, posi->ns, posi->ew);
        -:   44:        
        1:   45:fail_if(time == NULL,"time is null");
        1:   46:fail_if(posi == NULL," position is null");
        -:   47:
        -:   48:
        1:   49:free(time);
        1:   50: time = NULL;
        1:   51:free(posi);      
        1:   52: posi = NULL;
        1:   53:free(linema);
        1:   54: linema = NULL;
        1:   55:}END_TEST
        -:   56:
        -:   57:/*
        -:   58:Suite * new_suite(void) { 
        -:   59:
        -:   60:   Suite *suite = suite_create("GPS_test_suite");	 
        -:   61:   TCase *tcase = tcase_create("GPS_test_case_8"); 
        -:   62:   tcase_add_test(tcase, GPS_test_1); 
        -:   63:   suite_add_tcase(suite,tcase); 
        -:   64:   return suite; 
        -:   65: } 
        -:   66:
        -:   67:
        -:   68: int main(void) { 
        -:   69:
        -:   70:   int number_failed; 
        -:   71:   Suite *suite = new_suite(); 
        -:   72:   SRunner *suiter = srunner_create(suite); 
        -:   73:   srunner_run_all(suiter,CK_NORMAL); 
        -:   74:   number_failed = srunner_ntests_failed(suiter); 
        -:   75:   srunner_free(suiter); 
        -:   76:   return (number_failed == 0) ? EXIT_SUCCESS : EXIT_FAILURE; 
        -:   77: }  
        -:   78: */
